#!/bin/bash

. testlib.sh


function mkfile {
	make_var_printer PTEF_PREFIX "$@"
}


# Test basic PTEF_PREFIX functionality, ensure that it works
function sanity {
	mkfile > executable
	chmod +x executable
	PTEF_PREFIX=/prefix assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/prefix/executable' exec_log
}

# Test with PTEF_PREFIX unset, runner should default to empty
function notset {
	mkfile > executable
	chmod +x executable
	assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/executable' exec_log
}

# Test with PTEF_PREFIX set, but empty, result should be the same as when unset
function empty {
	mkfile > executable
	chmod +x executable
	PTEF_PREFIX= assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/executable' exec_log
}

# Test basic PTEF_PREFIX sanity when used with a subdir runner, the directory
# name should be appended to the prefix
function dir_sanity {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_PREFIX=/prefix assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/prefix/subd' subd/exec_log
}

# Test unset PTEF_PREFIX with a subdir runner, runner should default to it
# being empty and append the directory name
function dir_notset {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/subd' subd/exec_log
}

# Test with PTEF_PREFIX set, but empty, with a subdir runner, result should
# be same as when unset
function dir_empty {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_PREFIX= assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/subd' subd/exec_log
}

# Test PTEF_PREFIX containing whitespaces, runner should treat them the same as
# any other characters
function dir_space {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_PREFIX="/pre fix" assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/pre fix/subd' subd/exec_log
}

# Test with PTEF_PREFIX set, but without any slash - this is nonstandard, but
# the runner should still just prepend it to the test name
function dir_noslash {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_PREFIX="prefix" assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents 'prefix/subd' subd/exec_log
}

# Test PTEF_PREFIX with a trailing slash and a subdir runner, the prefix should
# have duplicate slashes, the runner should not trim the prefix string
function dir_endslash {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_PREFIX="/prefix/" assert_ptef_runner > "$tmpdir/runner_out"
	assert_contents '/prefix//subd' subd/exec_log
}


+ sanity
+ notset
+ empty
+ dir_sanity
+ dir_notset
+ dir_empty
+ dir_space
+ dir_noslash
+ dir_endslash


run_tests "$@"
