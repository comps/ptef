#!/bin/bash

. testlib.sh


# Since each variant (cli, bash, python, etc.) handles the open fd returned
# from mklog() differently, bin/$variant/ptef-report abstracts this into
# a behavior of the CLI ptef-report - piping stdin to the log.
#
# We therefore don't need to care about variant differences here.


# Test basic log-creation functionality
function sanity {
	assert_ptef_mklog testname </dev/null
	[ -d logs ]
	[ -f logs/testname.log ]
}

# Test testname with spaces
function testname_with_spaces {
	assert_ptef_mklog "test name" </dev/null
	[ -d logs ]
	[ -f "logs/test name.log" ]
}

# Test empty testname
# (This is non-standard, but our mklog should treat it as valid)
function testname_empty {
	assert_ptef_mklog "" </dev/null
	[ -d logs ]
	[ -f logs/.log ]
}

# Test actual log writing
function write_log {
	assert_ptef_mklog testname <<<"this is logged"
	[ -f logs/testname.log ]
	assert_contents 'this is logged' logs/testname.log
}

# Test binary data written to the log
function binary_log {
	printf "%b" "\x00\x01\x02\x03\x04" > binfile
	assert_ptef_mklog testname < binfile
	[ -f logs/testname.log ]
	cmp binfile logs/testname.log
}

# Test log rotation, it must not exceed .9
function log_rotation {
	local i=
	for i in {0..8}; do
		assert_ptef_mklog testname <<<"$i"
	done
	[ -d logs ]
	[ -f logs/testname.log.8 ]
	[ ! -f logs/testname.log.9 ]
	assert_ptef_mklog testname <<<"9"
	[ -f logs/testname.log.9 ]
	[ ! -f logs/testname.log.10 ]
	assert_ptef_mklog testname <<<"10"
	[ -f logs/testname.log.9 ]
	[ ! -f logs/testname.log.10 ]
	# non-standard
	[ ! -f logs/testname.log.0 ]
	# check log file content - we rotated i=0 out,
	# so .log is 10, .log.1 is 9, .., .log.9 is 1
	assert_contents '10' logs/testname.log
	for i in {9..1}; do
		assert_contents "$((10-i))" "logs/testname.log.$i"
	done
}

# Test that log rotation can be disabled
function norotate {
	assert_ptef_mklog testname <<<"1"
	assert_ptef_mklog -r testname <<<"2"
	[ -f logs/testname.log ]
	[ ! -f logs/testname.log.* ]
	assert_contents '2' logs/testname.log
}


+ sanity
+ testname_with_spaces
+ testname_empty
+ write_log
+ binary_log
+ log_rotation
+ norotate


run_tests "$@"
