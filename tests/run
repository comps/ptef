#!/bin/bash
argv0=$(basename "$0")

# eat up option args, pass them later to ptef-runner
opts=()
while [ "$#" -gt 0 ]; do
	[ "${1::1}" = "-" ] || break
	opts+=("$1")
	shift
done

failed=
function err { echo -e "\nERROR: $@\n" >&2; }

export PATH="$PWD/bin:$PATH"
export LD_LIBRARY_PATH="$PWD/bin"
export TEST_BINDIR="$PWD/bin"

exec {TEST_VALGRIND_FD}>valgrind.log
export TEST_VALGRIND_FD

function run_arg {
	local test="${1#/}" binary=

	local variant= subtest=
	IFS=/ read -r variant subtest <<<"$test"

	for binary in ptef-runner ptef-report ptef-mklog libptef.so; do
		if [ ! -x "bin/$variant/$binary" ]; then
			err "broken variant $variant"
			return 1
		fi
		ln -sf "$variant/$binary" "bin/$binary" || return 1
	done

	if [ -n "$subtest" ]; then
		subtest=("$subtest")
	else
		subtest=()
	fi

	local results_log="results-${variant}.log" results_fd= rc=
	exec {results_fd}>"$results_log"
	PTEF_RESULTS_FD="$results_fd" ptef-report RUN "$variant"
	PTEF_PREFIX="/$variant" \
		PTEF_LOGS="$PWD/logs" \
		PTEF_RESULTS_FD="$results_fd" \
		ptef-runner -a "$argv0" "${opts[@]}" "${subtest[@]}"
	rc=$?
	if [ "$rc" -eq 0 ]; then
		PTEF_RESULTS_FD="$results_fd" ptef-report PASS "$variant"
	else
		PTEF_RESULTS_FD="$results_fd" ptef-report FAIL "$variant"
	fi
	exec {results_fd}>&-

	# strip initial prefix from the results, for diffing
	# - note that this produced empty 'RUN ' and 'PASS ' results
	#   on the first and last line
	sed -i "s/[[:space:]]\+\/$variant/ /;/^[^ ]\+ $/d" "$results_log"

	return "$rc"
}

if [ "$#" -gt 0 ]; then
	variants=("$@")
else
	variants=(/cli /valgrind /errno /bash /python)
fi

for variant in "${variants[@]}"; do
	run_arg "$variant"
done

# compare generated results to a known-good reference
if [ -f results-reference.log ]; then
	for variant in "${variants[@]}"; do
		variant="${variant#/}"
		# only if all tests were run
		[ "$variant" = "${variant#*/*}" ] || continue
		results_log="results-$variant.log"
		if ! cmp -s "$results_log" results-reference.log; then
			err "$results_log differs from reference"
			diff --color=auto -u results-reference.log "$results_log"
		fi
	done
fi

if grep -q 'ERROR SUMMARY: [1-9] errors' valgrind.log; then
	err "found errors in valgrind.log"
fi

[ -z "$failed" ] && exit 0 || exit 1
