#!/bin/bash
set -e
argv0=$(basename "$0")

failed=
err() { echo >&2; echo "ERROR: $@" >&2; echo >&2; failed=1; }

export PATH="$PWD/bin:$PATH"
export LD_LIBRARY_PATH="$PWD/bin"

export TEST_VALGRIND_BINDIR="$PWD/bin/valgrind"
exec {TEST_VALGRIND_FD}>valgrind.log
export TEST_VALGRIND_FD

set -o pipefail
for variant in valgrind cli; do  # TODO: bash python
	for binary in ptef-runner ptef-report ptef-mklog libptef.so; do
		ln -sf "$variant/$binary" "bin/$binary"
	done
	PTEF_PREFIX="/$variant" ttee -f stdout.log -- ptef-runner -a "$argv0"
done

# TODO: compare logged stdout to some template

if grep -q 'ERROR SUMMARY: [1-9] errors' valgrind.log; then
	err "found errors in valgrind.log"
fi

[ -z "$failed" ] && exit 0 || exit 1
