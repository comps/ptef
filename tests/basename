#!/bin/bash

. testlib.sh


function mkfile {
	local suffix="${1:+.$1}"
	cat <<-EOF
	#!/bin/bash
	if env | grep -q PTEF_BASENAME; then echo "basename: \$PTEF_BASENAME"
	else echo "basename unset"
	fi > exec_log${suffix}
	EOF
}

function link_from_PATH {
	local src=$(command -v "$1")
	[ -e "$src" ] || return 1
	ln -s "$src" $2
}


# Test that PTEF_BASENAME is set by a runner to basename(argv[0])
function export_var_file {
	mkfile > executable
	chmod +x executable
	assert_ptef_runner > "$tmpdir/runner_out"
	assert_grep '^basename: ptef-runner$' exec_log
}
function export_var_dir {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	assert_ptef_runner > "$tmpdir/runner_out"
	assert_grep '^basename: ptef-runner$' subd/exec_log
}

# Test that PTEF_BASENAME defaults to filesystem-based argv0
function argv0_default {
	mkfile > executable
	chmod +x executable
	link_from_PATH ptef-runner testrun
	[ -x testrun ]
	./testrun >"$tmpdir/runner_out" 2>"$tmpdir/runner_err"
	assert_grep '^basename: testrun$' exec_log
}

# Test that default basename can be set via CLI -a option
function opt_a_over_argv0 {
	mkfile > executable
	chmod +x executable
	assert_ptef_runner -a testrun > "$tmpdir/runner_out"
	assert_grep '^basename: testrun$' exec_log
}

# Test that the runner respects PTEF_BASENAME over its basename(argv[0])
function var_over_argv0 {
	mkfile > executable
	chmod +x executable
	PTEF_BASENAME=testrun assert_ptef_runner > "$tmpdir/runner_out"
	assert_grep '^basename: testrun$' exec_log
}

# Test that PTEF_BASENAME is preferred over -a (default basename)
function var_over_opt_a {
	mkfile > executable
	chmod +x executable
	PTEF_BASENAME=varrun assert_ptef_runner -a optrun > "$tmpdir/runner_out"
	assert_grep '^basename: varrun$' exec_log
}

# Test that cli -A re-sets PTEF_BASENAME, overriding any existing one
function opt_A_over_var {
	mkfile > executable
	chmod +x executable
	PTEF_BASENAME=varrun assert_ptef_runner -A optrun > "$tmpdir/runner_out"
	assert_grep '^basename: optrun$' exec_log
}

# Test that non-existing pre-set PTEF_BASENAME results in no subdir being run
function nonexistent_var {
	mkdir subd
	mkfile > subd/ptef-runner
	chmod +x subd/ptef-runner
	PTEF_BASENAME=nonex assert_ptef_runner > "$tmpdir/runner_out"
	[ ! -f subd/exec_log ]
	[ ! -f logs ]
}


+ export_var_file
+ export_var_dir
+ argv0_default
+ opt_a_over_argv0
+ var_over_argv0
+ var_over_opt_a
+ opt_A_over_var
+ nonexistent_var


run_tests "$@"
