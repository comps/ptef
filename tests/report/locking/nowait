#!/bin/bash
# Test that ptef_report exits with 2 (EAGAIN) when an output is locked
# and PTEF_NOWAIT is passed

. testlib.bash

touch "$tmpdir/report_out"
exec {fd}>"$tmpdir/results_fd_out"

hold-lock >&"$fd" 2>"$tmpdir/lock_info" &
hold_pid=$!
prepend_cleanup "kill $hold_pid 2>/dev/null || true"  # safety

wait_lock "$tmpdir/lock_info"
! grep -q '^error' "$tmpdir/lock_info"

PTEF_RESULTS_FD="$fd" timeout 10 ptef-report -n PASS testname \
	>"$tmpdir/report_out" 2>"$tmpdir/report_err" \
		|| echo $? >"$tmpdir/report_exitval"

# make hold-lock finish
kill -INT "$hold_pid"
wait
grep -q '^unlocked$' "$tmpdir/lock_info"
! grep -q '^error' "$tmpdir/lock_info"

assert_contents '' "$tmpdir/report_err"
# ptef-report should have exited without writing out results
assert_contents '' "$tmpdir/results_fd_out"
assert_contents '' "$tmpdir/report_out"
assert_contents $'2\n' "$tmpdir/report_exitval"
