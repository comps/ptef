#!/bin/bash
# Test that ptef_report ignores any locking when PTEF_NOLOCK is passed

. testlib.bash

touch "$tmpdir/report_out"
exec {fd}>"$tmpdir/results_fd_out"

hold-lock >&"$fd" 2>"$tmpdir/lock_info" &
hold_pid=$!
prepend_cleanup "kill $hold_pid 2>/dev/null || true"  # safety

wait_lock "$tmpdir/lock_info"
! grep -q '^error' "$tmpdir/lock_info"

PTEF_RESULTS_FD="$fd" TEST_WRAPPER="timeout 10" \
	assert_ptef_report -N PASS testname >"$tmpdir/report_out" || true

# make hold-lock finish
kill -INT "$hold_pid"
wait
grep -q '^unlocked$' "$tmpdir/lock_info"
! grep -q '^error' "$tmpdir/lock_info"

# ptef-report should have reported to both outputs, ignoring lock
assert_contents $'PASS[\t ]*/testname\n' "$tmpdir/results_fd_out"
assert_contents $'PASS[\t ]*/testname\n' "$tmpdir/report_out"
